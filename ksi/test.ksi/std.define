
@std

_range ( )

$range
refers ( _range )
struct ( from, to = all )

$range_step
extends ( $range )
struct ( step = 1 )

&contains _range range { number } ( ) -- {from_strict = true, to_strict = false}

/*
v.type = $range
v.type{from: 0}
v.args = {from: 0}
v.type! v.args
v.args as v.type

$range{0 all} => v.r &contains{5}
v.args = {5, to_strict: true}
v.r &contains: v.args
&contains(v.r 5)

v.fn = &contains&
v.r !v.fn{5}
v.r !v.fn: v.args
v.fn(v.r 5)
*/
