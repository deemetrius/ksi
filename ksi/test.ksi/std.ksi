
@std

_range ()

$range struct : _range (
	%from
	%to = all
)

$range_step struct : $range (
	%step = 1
)

&contains _range: %range {
	%number
	%from_exact = yes
	%to_exact = no
} (
	$bool@std:
	%ret = (&&
		(%from_exact then (>=) else (>))(%number, %range.from)
		(%to_exact then (<=) else (<))(%number, %range.to)
	)
)

--

@std

$bool enum (true# false#)

yes = $bool.true#
no = $bool.false#

$enum_element (%index %source %value value#)

$category {$: %cat#}

$type {$category: %cat#}

$array {$hint: %item_type#}

$map {$hint: %key#, %value#}
